
(use-package meow
  :config
  (defun meow-setup ()
    (meow-normal-define-key
     '("*" . meow-expand-0)
     '("=" . meow-expand-9)
     '("!" . meow-expand-8)
     '("[" . meow-expand-7)
     '("]" . meow-expand-6)
     '("{" . meow-expand-5)
     '("+" . meow-expand-4)
     '("}" . meow-expand-3)
     '(")" . meow-expand-2)
     '("(" . meow-expand-1)
     '("1" . digit-argument)
     '("2" . digit-argument)
     '("3" . digit-argument)
     '("4" . digit-argument)
     '("5" . digit-argument)
     '("6" . digit-argument)
     '("7" . digit-argument)
     '("8" . digit-argument)
     '("9" . digit-argument)
     '("0" . digit-argument)
     '("-" . negative-argument)
     '(";" . meow-reverse)
     '("," . meow-inner-of-thing)
     '("." . meow-bounds-of-thing)
     '("<" . meow-beginning-of-thing)
     '(">" . meow-end-of-thing)
     '("a" . meow-append)
     '("A" . meow-open-below)
     '("b" . meow-back-word)
     '("B" . meow-back-symbol)
     '("c" . meow-change)
     '("C" . meow-change-save)
     '("x" . meow-delete)
     '("e" . meow-line)
     '("f" . meow-find)
     '("F" . meow-find-expand)
     '("g" . meow-keyboard-quit)
     '("G" . goto-line)
     '("h" . meow-head)
     '("H" . meow-head-expand)
     '("i" . meow-insert)
     '("I" . meow-open-above)
     '("j" . meow-join)
     '("J" . delete-indentation)
     '("k" . meow-kill)
     '("l" . meow-till)
     '("L" . meow-till-expand)
     '("m" . meow-mark-word)
     '("M" . meow-mark-symbol)
     '("n" . meow-next)
     '("N" . meow-next-expand)
     '("o" . meow-block)
     '("O" . meow-block-expand)
     '("p" . meow-prev)
     '("P" . meow-prev-expand)
     '("q" . meow-quit)
     '("r" . meow-replace)
     '("R" . meow-replace-save)
     '("s" . meow-search)
     '("S" . meow-pop-search)
     '("t" . meow-tail)
     '("T" . meow-tail-expand)
     '("u" . undo)
     '("v" . meow-visit)
     '("w" . meow-next-word)
     '("W" . meow-next-symbol)
     ;; '("y" . meow-save)
     '("y" . copy-to-x-clipboard)
     '("p" . yank)
     '("z" . meow-pop-selection)
     '("Z" . meow-pop-all-selection)
     '("&" . meow-query-replace)
     '("%" . meow-query-replace-regexp)
     '("<escape>" . meow-last-buffer)))
  
  (meow-leader-define-key
   '(",ss" . swiper)
   '(",kk" . find-file-in-project-by-selected)
   '(",jj" . find-file-in-project-at-point)
   '(",rg" . counsel-rg)
   '(",rr" . vr/query-replace)
   '(",rwt" . rw-test-new-config)
   '(",xh" . mark-whole-buffer)
   '(",do" . rw-display-current-buffer-other-frame)
   '(",eb" . eval-buffer)
   '(",rb" . revert-buffer)
   '(",gs" . magit-status)
   '(",ps" . rw-profiler-toggle)
   '(",pr" . profiler-report)
   '(",aa" . copy-to-x-clipboard)
   '(",zz" . paste-from-x-clipboard)
   '(",ci" . comment-line)
   )
  
  (meow-global-mode 1)
  
  (meow-setup)
  )



;; profiler: like "top" in linux 
;; (evil-leader/set-key
;;   "ps" 'rw-profiler-toggle
;;   "pr" 'profiler-report)

;; ;; save/read desktop (emacs的工作区概念)
;; (evil-leader/set-key
;;   "ds" 'rw-desktop-save
;;   "dr" 'rw-desktop-read)

;; ;; clipboard: usually not used in windows...
;; (evil-leader/set-key
;;   "aa" 'copy-to-x-clipboard
;;   "zz" 'paste-from-x-clipboard)

(provide 'init-meow)
